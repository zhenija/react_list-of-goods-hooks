{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","isReversed","sortType","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQJ,GACN,KAAKL,EAASU,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITT,GACFE,EAAaQ,UAGRR,G,SA9BJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiCE,IAAMe,EAAgB,WAC3B,MACCC,oBAAS,GADV,mBAAOZ,EAAP,KAAmBa,EAAnB,KAGA,EACCD,mBAAShB,EAASkB,MADnB,mBAAOb,EAAP,KAAiBc,EAAjB,KAUA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaL,EAASU,UAEtCa,QAAS,WAhBMJ,EAAYnB,EAASU,UAUtC,iCAaA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaL,EAASY,SAEtCW,QAAS,WA5BUJ,EAAYnB,EAASY,SAsB1C,4BAaA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,WACPN,GAAeb,IAPnB,sBAaEC,GAAYD,IAEV,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WAnDnBJ,EAAYnB,EAASkB,MACrBD,GAAc,IA+CN,sBAYN,6BACGf,EAAkBD,EAAiBG,EAAYC,GAAUmB,KAAI,SAAAC,GAAI,OAChE,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.beef8acb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  isReversed: boolean,\n  sortType: SortType,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed]\n = useState(false);\n\n  const [sortType, setSortType]\n = useState(SortType.NONE);\n\n  const sortAlph = () => setSortType(SortType.ALPABET);\n  const sortByLength = () => setSortType(SortType.LENGTH);\n  const resetter = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={() => {\n            sortAlph();\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            sortByLength();\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                resetter();\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, isReversed, sortType).map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}